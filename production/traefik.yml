version: "3.7"

services:
  traefik:
    image: traefik:2.11.2
    command:
      # Configuration générale
      - "--api.dashboard=true"
      - "--api.debug=false"
      
      # Configuration des providers Docker
      - "--providers.docker.swarmMode=true"
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=network_public"
      - "--providers.docker.watch=true"
      
      # Configuration des entrypoints
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
      - "--entrypoints.websecure.address=:443"
      
      # Configuration SSL avec Let's Encrypt
      - "--certificatesresolvers.letsencryptresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencryptresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.letsencryptresolver.acme.email=your@email.com"
      - "--certificatesresolvers.letsencryptresolver.acme.storage=/etc/traefik/letsencrypt/acme.json"
      - "--certificatesresolvers.letsencryptresolver.acme.keytype=EC256"
      
      # Configuration des logs
      - "--log.level=INFO"
      - "--log.format=json"
      - "--log.filePath=/var/log/traefik/traefik.log"
      
      # Configuration des logs d'accès
      - "--accesslog=true"
      - "--accesslog.format=json"
      - "--accesslog.filepath=/var/log/traefik/access.log"
      - "--accesslog.bufferingsize=100"
      
      # Configuration des métriques (optionnel)
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.addEntryPointsLabels=true"
      - "--metrics.prometheus.addServicesLabels=true"
      - "--entrypoints.metrics.address=:8082"
      - "--metrics.prometheus.entryPoint=metrics"
      
      # Configuration de sécurité
      - "--global.sendAnonymousUsage=false"
      - "--serversTransport.insecureSkipVerify=false"
      
      # Configuration du load balancing
      - "--providers.docker.defaultRule=Host(`{{ normalize .Name }}.localhost`)"
      
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
      labels:
        # Configuration du dashboard Traefik
        - "traefik.enable=true"
        - "traefik.http.routers.traefik-dashboard.rule=Host(`traefik.your-domain.com`)"
        - "traefik.http.routers.traefik-dashboard.entrypoints=websecure"
        - "traefik.http.routers.traefik-dashboard.tls.certresolver=letsencryptresolver"
        - "traefik.http.routers.traefik-dashboard.service=api@internal"
        - "traefik.http.services.traefik-dashboard.loadbalancer.server.port=8080"
        
        # Authentification basique pour le dashboard (optionnel)
        - "traefik.http.middlewares.traefik-auth.basicauth.users=admin:$$2y$$10$$..."  # Générer avec htpasswd
        - "traefik.http.routers.traefik-dashboard.middlewares=traefik-auth"
        
        # Middleware de redirection HTTPS global
        - "traefik.http.middlewares.redirect-https.redirectscheme.scheme=https"
        - "traefik.http.middlewares.redirect-https.redirectscheme.permanent=true"
        - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
        - "traefik.http.routers.http-catchall.entrypoints=web"
        - "traefik.http.routers.http-catchall.middlewares=redirect-https@docker"
        - "traefik.http.routers.http-catchall.priority=1"
        
        # Middleware de sécurité
        - "traefik.http.middlewares.security-headers.headers.accessControlAllowMethods=GET,OPTIONS,PUT,POST,DELETE,PATCH"
        - "traefik.http.middlewares.security-headers.headers.accessControlAllowOriginList=*"
        - "traefik.http.middlewares.security-headers.headers.accessControlMaxAge=100"
        - "traefik.http.middlewares.security-headers.headers.addVaryHeader=true"
        - "traefik.http.middlewares.security-headers.headers.referrerPolicy=same-origin"
        - "traefik.http.middlewares.security-headers.headers.hostsProxyHeaders=X-Forwarded-Host"
        - "traefik.http.middlewares.security-headers.headers.customRequestHeaders.X-Forwarded-Proto=https"
        
        # Middleware de rate limiting
        - "traefik.http.middlewares.rate-limit.ratelimit.average=100"
        - "traefik.http.middlewares.rate-limit.ratelimit.burst=50"
        - "traefik.http.middlewares.rate-limit.ratelimit.period=1m"
        
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "traefik_certificates:/etc/traefik/letsencrypt"
      - "traefik_logs:/var/log/traefik"
      
    ports:
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host
      - target: 8082
        published: 8082
        mode: host
        
    networks:
      - network_public
      
    healthcheck:
      test: ["CMD", "traefik", "healthcheck", "--ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  traefik_certificates:
    external: true
    name: volume_swarm_certificates
  traefik_logs:
    external: true
    name: volume_swarm_traefik_logs

networks:
  network_public:
    external: true
    name: network_public
